@startuml
hide empty members

Tile <|-- CellTile

CellTile <|-- PlayableCellTile
CellTile <|-- EmptyCellTile
PlayableCellTile <|-- FloorCellTile
PlayableCellTile <|-- HoleCellTile
PlayableCellTile <|-- DoorCellTile
CellTile <|-- WallCellTile

DirectionalCellTile <|-- UpCellTile
DirectionalCellTile <|-- DownCellTile
DirectionalCellTile <|-- LeftCellTile
DirectionalCellTile <|-- RightCellTile

FloorCellTile <|-- DirectionalCellTile
FloorCellTile <|-- ObjectiveCellTile

abstract class Tile

abstract class CellTile {
    +{static} SIDE: int
    -tileColor: int
    #cell: Cell

    ~CellTile(cell: Cell, tileColor: int)
    #init()
    #printChar(p: char, foreground: int)
    +{static} tileOf(cell: Cell): CellTile
}

abstract class PlayableCellTile {
    ~PlayableCellTile(cell: Cell, tileColor: int)
    +paint()
    #setPlayerBackground()
    #setBoxBackground()
    #setLightBoxBackground()
}

abstract class DirectionalCellTile {
    -direction: char
    ~DirectionalCellTile(cell: Cell, direction: char)
    +clear()
}

class FloorCellTile {
    +FloorCellTile(cell: Cell)
}

class UpCellTile {
    +UpCellTile(cell: Cell)
}

class DownCellTile {
    +DownCellTile(cell: Cell)
}

class LeftCellTile {
    +LeftCellTile(cell: Cell)
}

class RightCellTile {
    +RightCellTile(cell: Cell)
}

class EmptyCellTile {
    ~EmptyCellTile(cell: Cell)
}

class WallCellTile {
    ~WallCellTile(cell: Cell)
}

class HoleCellTile {
    ~HoleCellTile(cell: Cell)
    +clear()
    #setPlayerBackground()
}

class DoorCellTile {
    ~DoorCellTile(cell: Cell)
    +clear()
}

class ObjectiveCellTile {
    ~ObjectiveCellTile(cell: Cell)
    +clear()
    #setBoxBackground()
    #setLightBoxBackground()
}

@enduml